ARTIFACTS += subproblems/subproblem-ids.txt \
	  grafted_solution/grafted_solution.tre \
	  grafted_solution_ottnames.tre \
	  full_supertree/full_supertree.tre \
	  subproblem_solutions/solution-ids.txt \
	  labelled_supertree/labelled_supertree.tre \
	  annotated_supertree/annotations.json


subproblems/scratch/args.txt: exemplified_phylo/nonempty_trees.txt
	cat exemplified_phylo/nonempty_trees.txt | sed -e 's:^:exemplified_phylo/:g' > subproblems/scratch/args.txt

# Note that run-subproblem-finder.sh is odd in that the second arg is relative to the first arg.

subproblems/dumped-subproblem-ids.txt: exemplified_phylo/taxonomy.tre subproblems/scratch/args.txt exemplified_phylo/nonempty_trees.txt
	./bin/run-subproblem-finder.sh \
	  subproblems/scratch \
	  ../dumped-subproblem-ids.txt \
	  exemplified_phylo/taxonomy.tre \
	  -fsubproblems/scratch/args.txt

subproblems/checksummed-subproblem-ids.txt: subproblems/dumped-subproblem-ids.txt
	bash bin/checksum-tree-files.sh subproblems/scratch && cp subproblems/dumped-subproblem-ids.txt subproblems/checksummed-subproblem-ids.txt

subproblems/subproblem-ids.txt: subproblems/checksummed-subproblem-ids.txt
	bash bin/move-subproblem-if-differing.sh subproblems/scratch subproblems subproblems/checksummed-subproblem-ids.txt && cp subproblems/checksummed-subproblem-ids.txt subproblems/subproblem-ids.txt

subproblem_solutions/solution-ids.txt: subproblems/subproblem-ids.txt
	for n in $$(cat subproblems/subproblem-ids.txt) ; do \
		id=$${n%.tre} ; \
		otc-solve-subproblem subproblems/$$n -n$${id} > subproblem_solutions/$${n} ; \
	done ;
	cp subproblems/subproblem-ids.txt subproblem_solutions/solution-ids.txt

grafted_solution/grafted_solution.tre: subproblem_solutions/solution-ids.txt
	sed 's:^:subproblem_solutions/:' subproblem_solutions/solution-ids.txt > subproblem_solutions/paths.txt
	otc-graft-solutions $$(cat subproblem_solutions/paths.txt) > grafted_solution/.grafted_solution.tre && \
	mv grafted_solution/.grafted_solution.tre grafted_solution/grafted_solution.tre
	rm subproblem_solutions/paths.txt

grafted_solution/grafted_solution_ottnames.tre: grafted_solution/grafted_solution.tre
	otc-relabel-tree grafted_solution/grafted_solution.tre --taxonomy=$(OTT_DIR) --format-tax="%N ott%I" --del-monotypic > grafted_solution/grafted_solution_ottnames.tre

full_supertree/full_supertree.tre: grafted_solution/grafted_solution.tre cleaned_ott/cleaned_ott.tre
	otc-unprune-solution grafted_solution/grafted_solution.tre cleaned_ott/cleaned_ott.tre > full_supertree/full_supertree.tre

labelled_supertree/labelled_supertree.tre: full_supertree/full_supertree.tre
	otc-name-unnamed-nodes $^ > $@

labelled_supertree_ottnames/labelled_supertree_ottnames.tre: labelled_supertree/labelled_supertree.tre
	otc-relabel-tree labelled_supertree/labelled_supertree.tre --taxonomy=$(OTT_DIR) --format-tax="%N ott%I" --del-monotypic > labelled_supertree/labelled_supertree_ottnames.tre

annotated_supertree/annotations.json: cleaned_ott/cleaned_ott.tre labelled_supertree/labelled_supertree.tre exemplified_phylo/nonempty_trees.txt
	otc-annotate-synth cleaned_ott/cleaned_ott.tre labelled_supertree/labelled_supertree.tre $$(sed 's:^:exemplified_phylo/:' exemplified_phylo/nonempty_trees.txt) > annotated_supertree/annotations1.json
	bin/gen_attributes.py > annotated_supertree/annotations2.json
	bin/merge-json.py annotated_supertree/annotations1.json annotated_supertree/annotations2.json > annotated_supertree/annotations.json

clean2:
	rm -f subproblems/scratch/*.tre
	rm -f subproblems/scratch/*.md5
	rm -f subproblems/scratch/*.txt
	rm -f subproblems/*.tre
	rm -f subproblems/*.md5
	rm -f subproblems/*.txt
	rm -f subproblem_solutions/*.tre
	rm -f annotated_supertree/*.json
